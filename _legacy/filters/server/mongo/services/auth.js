"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("../config");
class AuthService {
    constructor(db, eh) {
        this.db = db;
        this.eh = eh;
        this.validateCredentials = (name, password) => this.users.findOne({ name, password })
            .then(t => !!t);
        this.validateCredentialsAndGet = (name, password) => this.users.findOne({ name, password });
        this.register = async (user) => {
            if (await this.exists(user.name))
                return false;
            const res = await this.users.insertOne(user);
            this.eh.emit("user-added", { user, id: res.insertedId.toHexString() });
            return true;
        };
        this.get = (name) => this.users.findOne({ name });
        this.update = (user) => this.users.replaceOne({ name: user.name }, user)
            .then(t => !!t.result.n);
        this.updateOrRegister = async (user) => {
            const res = await this.users.replaceOne({ name: user.name }, user, { upsert: true });
            this.eh.emit("user-added", { user, id: res.upsertedId._id.toHexString() });
        };
        this.exists = (name) => this.users.findOne({ name }).then(t => !!t);
        this.remove = async (name) => {
            const res = await this.users.findOneAndDelete({ name });
            if (res.value)
                this.eh.emit("user-removed", { id: res.value._id.toHexString() });
            return !!res.value;
        };
        this.getAll = () => this.users.find({}).toArray();
        this.users = db.collection(config_1.default.collections.users);
    }
}
exports.default = AuthService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImF1dGgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFJQSxzQ0FBOEI7QUFFOUI7SUFJQyxZQUFvQixFQUFNLEVBQVUsRUFBZ0I7UUFBaEMsT0FBRSxHQUFGLEVBQUUsQ0FBSTtRQUFVLE9BQUUsR0FBRixFQUFFLENBQWM7UUFJcEQsd0JBQW1CLEdBQUcsQ0FBQyxJQUFZLEVBQUUsUUFBZ0IsS0FDcEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQXVCLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDO2FBQzFELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBRWpCLDhCQUF5QixHQUFHLENBQUMsSUFBWSxFQUFFLFFBQWdCLEtBQzFELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUF1QixFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFBO1FBRTdELGFBQVEsR0FBRyxLQUFLLEVBQUUsSUFBVTtZQUMzQixFQUFFLENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNoQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ2QsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUM1QyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFBO1lBQ3RFLE1BQU0sQ0FBQyxJQUFJLENBQUE7UUFDWixDQUFDLENBQUE7UUFFRCxRQUFHLEdBQUcsQ0FBQyxJQUFZLEtBQ2xCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUF1QixFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7UUFFbkQsV0FBTSxHQUFHLENBQUMsSUFBVSxLQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxDQUFDO2FBQzlDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFFMUIscUJBQWdCLEdBQUcsS0FBSyxFQUFFLElBQVU7WUFDbkMsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7WUFDcEYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUE7UUFDM0UsQ0FBQyxDQUFBO1FBRUQsV0FBTSxHQUFHLENBQUMsSUFBWSxLQUNyQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFFNUMsV0FBTSxHQUFHLEtBQUssRUFBRSxJQUFZO1lBQzNCLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7WUFDdkQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztnQkFDYixJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFBO1lBQ2xFLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQTtRQUNuQixDQUFDLENBQUE7UUFFRCxXQUFNLEdBQUcsTUFDUixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBdUIsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUE7UUF6Q25ELElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxnQkFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUNyRCxDQUFDO0NBMENEO0FBaERELDhCQWdEQyJ9